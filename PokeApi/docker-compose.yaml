version: '3.8'

services:
  app:
    build: .
    command: /bin/bash -c "./scripts/bootstrap_dynamodb.sh && python -u app/main.py"
    container_name: poke-app
    ports:
      - "8010:8000"
    volumes:
      - .:/app
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DYNAMODB_ENDPOINT: http://dynamodb:8000
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      DLQ_QUEUE_URL: http://localstack:4566/000000000000/dead-letter-queue
      PROCESSING_ENDPOINT: http://httpbin.org/post
      CIRCUIT_BREAKER_THRESHOLD: 5
      CIRCUIT_BREAKER_RESET_TIMEOUT: 60
      OPENSEARCH_HOST: opensearch
      OPENSEARCH_PORT: 9200
      OPENSEARCH_USER: admin
      OPENSEARCH_PASS: admin
    depends_on:
      redis:
        condition: service_healthy
      dynamodb:
        condition: service_healthy
      localstack:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  dlq-worker:
    build: .
    container_name: poke-dlq-worker
    command: python app/infrastructure/workers/dlq_reprocessor.py
    volumes:
      - .:/app
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DYNAMODB_ENDPOINT: http://dynamodb:8000
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      DLQ_QUEUE_URL: http://localstack:4566/000000000000/dead-letter-queue
      PROCESSING_ENDPOINT: http://httpbin.org/post
      CIRCUIT_BREAKER_THRESHOLD: 5
      CIRCUIT_BREAKER_RESET_TIMEOUT: 60
      OPENSEARCH_HOST: opensearch
      OPENSEARCH_PORT: 9200
      OPENSEARCH_USER: admin
      OPENSEARCH_PASS: admin
    depends_on:
      redis:
        condition: service_healthy
      dynamodb:
        condition: service_healthy
      localstack:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  redis:
    image: redis:6.2.13-alpine3.18
    container_name: poke-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: poke-dynamodb
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal"
    volumes:
      - dynamodb_data:/home/dynamodblocal
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  localstack:
    image: localstack/localstack:2.3.0
    container_name: poke-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sqs,dynamodb
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DEBUG=1
      - PERSISTENCE=1
    volumes:
      - localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: poke-opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
  dynamodb_data:
  localstack_data:
